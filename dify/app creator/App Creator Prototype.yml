app:
  description: ''
  icon: ðŸ¤–
  icon_background: '#FFEAD5'
  mode: workflow
  name: App Creator Prototype
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/gemini:0.2.7@b8a04c0155eb3b9d43ed1199b4387e7f67ef75ad63fcec466eab31a726e2c3a0
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1757075547683-source-1757077407622-target
      selected: false
      source: '1757075547683'
      sourceHandle: source
      target: '1757077407622'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1756826359838-source-1757079071922-target
      selected: false
      source: '1756826359838'
      sourceHandle: source
      target: '1757079071922'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: end
      id: 1757080929697-source-1756825484203-target
      selected: false
      source: '1757080929697'
      sourceHandle: source
      target: '1756825484203'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: http-request
      id: 1757079584477-source-1757082045123-target
      selected: false
      source: '1757079584477'
      sourceHandle: source
      target: '1757082045123'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1757079071922-source-1757079584477-target
      selected: false
      source: '1757079071922'
      sourceHandle: source
      target: '1757079584477'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1757082045123-source-1757084569421-target
      selected: false
      source: '1757082045123'
      sourceHandle: source
      target: '1757084569421'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1757084569421-source-1757080929697-target
      selected: false
      source: '1757084569421'
      sourceHandle: source
      target: '1757080929697'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: tool
      id: 1756820253386-source-1757948993151-target
      source: '1756820253386'
      sourceHandle: source
      target: '1757948993151'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1757948993151-source-1758028067775-target
      source: '1757948993151'
      sourceHandle: source
      target: '1758028067775'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1758028067775-source-1756824342559-target
      source: '1758028067775'
      sourceHandle: source
      target: '1756824342559'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: parameter-extractor
        targetType: llm
      id: 1758893789428-source-1757513100087-target
      selected: false
      source: '1758893789428'
      sourceHandle: source
      target: '1757513100087'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1757077407622-source-1756826359838-target
      selected: false
      source: '1757077407622'
      sourceHandle: source
      target: '1756826359838'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1758907407686-source-1757075547683-target
      selected: false
      source: '1758907407686'
      sourceHandle: source
      target: '1757075547683'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: llm
      id: 1757513100087-source-1760259516447-target
      selected: false
      source: '1757513100087'
      sourceHandle: source
      target: '1760259516447'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1760259516447-source-1758907407686-target
      selected: false
      source: '1760259516447'
      sourceHandle: source
      target: '1758907407686'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1756824342559-source-1760264519999-target
      source: '1756824342559'
      sourceHandle: source
      target: '1760264519999'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: parameter-extractor
      id: 1760264519999-source-1758893789428-target
      selected: false
      source: '1760264519999'
      sourceHandle: source
      target: '1758893789428'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables:
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: Query
          max_length: 256
          options:
          - AI Powered Apps
          - Business Utility
          required: false
          type: text-input
          variable: Query
        - label: AI_Powered_Apps
          max_length: 48
          options:
          - ChatBot
          - Image Detector
          - Sentiment Analysis
          required: true
          type: select
          variable: AI_Powered_Apps
        - label: Business_Utility_Apps
          max_length: 48
          options:
          - None
          required: true
          type: select
          variable: Business_Utility_Apps
      height: 142
      id: '1756820253386'
      position:
        x: 225.42410580051887
        y: 294
      positionAbsolute:
        x: 225.42410580051887
        y: 294
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data: []
          type: none
        desc: ''
        headers: ''
        method: get
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get DSL
        type: http-request
        url: '{{#1758028067775.test2_url#}}'
        variables: []
      height: 126
      id: '1756824342559'
      position:
        x: 603.0339104181248
        y: 492.81732232626115
      positionAbsolute:
        x: 603.0339104181248
        y: 492.81732232626115
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1757080929697'
          - text
          value_type: string
          variable: URL
        selected: false
        title: End
        type: end
      height: 90
      id: '1756825484203'
      position:
        x: 2433.37296754869
        y: 306.666748644739
      positionAbsolute:
        x: 2433.37296754869
        y: 306.666748644739
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: '{{#1757077407622.access_token#}}'
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-714
            key: ''
            type: text
            value: "{\n  \"mode\": \"yaml-content\",\n  \"yaml_content\": \"{{#1758907407686.dsl_text#}}\"\
              \n}"
          type: json
        desc: ''
        headers: Content-Type:application/json
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Import DSL
        type: http-request
        url: http://docker-api-1:5001/console/api/apps/imports
        variables: []
      height: 139
      id: '1756826359838'
      position:
        x: 1505.3729675486904
        y: 303.8126503039514
      positionAbsolute:
        x: 1505.3729675486904
        y: 303.8126503039514
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data:
          - id: key-value-1552
            key: ''
            type: text
            value: "{\n  \"email\": \"xzakwanzahidx@gmail.com\",\n  \"password\":\
              \ \"Password123\"\n}\n\n"
          type: json
        desc: ''
        headers: Content-Type:application/json
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Login
        type: http-request
        url: http://docker-api-1:5001/console/api/login
        variables: []
      height: 139
      id: '1757075547683'
      position:
        x: 1207.5136477125868
        y: 301.35948772796354
      positionAbsolute:
        x: 1207.5136477125868
        y: 301.35948772796354
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(credential: str) -> dict:\n    # Parse the\
          \ JSON string from the login node\n    body_json = json.loads(credential)\n\
          \    \n    # Extract the access token\n    access_token = body_json.get(\"\
          data\", {}).get(\"access_token\", \"\")\n    \n    return {\n        \"\
          access_token\": access_token\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          access_token:
            children: null
            type: string
        selected: false
        title: Extract Access Token
        type: code
        variables:
        - value_selector:
          - '1757075547683'
          - body
          value_type: string
          variable: credential
      height: 54
      id: '1757077407622'
      position:
        x: 1207.5136477125868
        y: 451.58988223068053
      positionAbsolute:
        x: 1207.5136477125868
        y: 451.58988223068053
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(response: str) -> dict:\n    # Parse the JSON\
          \ string from the import node\n    body_json = json.loads(response)\n  \
          \  \n    # Extract the DSL id and App id\n    dsl_id = body_json.get(\"\
          id\", \"\")\n    app_id = body_json.get(\"app_id\", \"\")\n    \n    return\
          \ {\n        \"dsl_id\": dsl_id,\n        \"app_id\": app_id\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          app_id:
            children: null
            type: string
          dsl_id:
            children: null
            type: string
        selected: false
        title: Extract App ID
        type: code
        variables:
        - value_selector:
          - '1756826359838'
          - body
          value_type: string
          variable: response
      height: 54
      id: '1757079071922'
      position:
        x: 1505.3729675486904
        y: 462.3810343590247
      positionAbsolute:
        x: 1505.3729675486904
        y: 462.3810343590247
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: '{{#1757077407622.access_token#}}'
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-1402
            key: ''
            type: text
            value: "{\n  \"workflow_id\": \"{{#1757079071922.dsl_id#}}\"\n}\n"
          type: json
        desc: ''
        headers: Content-Type:application/json
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Publish Workflow
        type: http-request
        url: http://docker-api-1:5001/console/api/apps/{{#1757079071922.app_id#}}/workflows/publish
        variables: []
      height: 174
      id: '1757079584477'
      position:
        x: 1807.3729675486904
        y: 306.666748644739
      positionAbsolute:
        x: 1807.3729675486904
        y: 306.666748644739
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: gemini-2.0-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: 622c6fb4-d4d1-4919-8ed2-d8d9390b1614
          role: system
          text: 'You are an assistant that gives out only the URL of an app.

            The url is {{#1757084569421.public_url#}}. '
        selected: false
        title: LLM
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1757080929697'
      position:
        x: 2117.9443961201187
        y: 306.666748644739
      positionAbsolute:
        x: 2117.9443961201187
        y: 306.666748644739
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: '{{#1757077407622.access_token#}}'
            type: bearer
          type: api-key
        body:
          data: []
          type: none
        desc: ''
        headers: Content-Type:application/json
        method: get
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: Get Publish URL
        type: http-request
        url: http://docker-api-1:5001/console/api/apps/{{#1757079071922.app_id#}}
        variables: []
      height: 158
      id: '1757082045123'
      position:
        x: 1807.3729675486904
        y: 520.9524629304533
      positionAbsolute:
        x: 1807.3729675486904
        y: 520.9524629304533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(response: str) -> dict:\n    \"\"\"\n    Parses\
          \ a Dify app JSON response and constructs a public URL.\n    Always uses\
          \ http://localhost/ as the base URL.\n    Supports all app modes (chat,\
          \ workflow, api, etc.).\n    \"\"\"\n\n    # --- Step 1: Parse JSON safely\
          \ ---\n    try:\n        body_json = json.loads(response)\n    except Exception\
          \ as e:\n        return {\"error\": f\"Invalid JSON input: {e}\"}\n\n  \
          \  # --- Step 2: Extract key information ---\n    dsl_id = body_json.get(\"\
          id\", \"\")\n    app_id = body_json.get(\"app_id\", \"\")\n    app_mode\
          \ = body_json.get(\"mode\", \"\").lower()\n    site = body_json.get(\"site\"\
          , {}) or {}\n    public_code = site.get(\"code\", \"\")\n\n    # --- Step\
          \ 3: Determine path based on mode ---\n    mode_path_map = {\n        \"\
          workflow\": \"workflow\",\n        \"chat\": \"chat\",\n        \"api\"\
          : \"api\",\n        \"agent\": \"agent\"\n    }\n    path_segment = mode_path_map.get(app_mode,\
          \ \"chat\")\n\n    # --- Step 4: Always use localhost base URL ---\n   \
          \ base_url = \"http://localhost\"\n\n    # --- Step 5: Construct full public\
          \ URL ---\n    public_url = f\"{base_url.rstrip('/')}/{path_segment}/{public_code}\"\
          \ if public_code else \"\"\n\n    # --- Step 6: Return structured output\
          \ ---\n    return {\n        \"dsl_id\": dsl_id,\n        \"app_id\": app_id,\n\
          \        \"app_mode\": app_mode or \"chat\",\n        \"public_code\": public_code,\n\
          \        \"public_url\": public_url\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          app_id:
            children: null
            type: string
          app_mode:
            children: null
            type: string
          dsl_id:
            children: null
            type: string
          public_code:
            children: null
            type: string
          public_url:
            children: null
            type: string
        selected: false
        title: Extract URL
        type: code
        variables:
        - value_selector:
          - '1757082045123'
          - body
          value_type: string
          variable: response
      height: 54
      id: '1757084569421'
      position:
        x: 1807.3729675486904
        y: 708.0953200733104
      positionAbsolute:
        x: 1807.3729675486904
        y: 708.0953200733104
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1758893789428'
          - prompt_template
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: gemini-2.5-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: 90ad1110-1692-4922-8b78-05c044ed7f29
          role: system
          text: "You are an assistant that generates structured JSON output for a\
            \ Dify LLM node.\n\nYou will receive:\n- The extracted \"prompt_template\"\
            \ text as reference: {{#context#}}\n- The user's request describing what\
            \ to change: {{#1756820253386.Query#}}\n\nYour task:\n- Create a new JSON\
            \ object with exactly two fields: \"name\" and \"prompt_template\".\n\
            \  - \"name\": A concise, clear, and relevant title based on the user's\
            \ request.\n  - \"prompt_template\": A revised system prompt, adapted\
            \ from the reference template and updated according to the user's request.\
            \ Retain most of the original content, modifying only what is necessary\
            \ to reflect the changes.\n- Do not modify, remove, rename, or relocate\
            \ any variable placeholders (like the context variable or the query variable).\
            \ These placeholders must remain exactly as they appear in the edited\
            \ prompt_template.\n\nOutput requirements:\n- JSON ONLY. Do not include\
            \ explanations, extra text, or code fences.\n- Use double quotes for all\
            \ keys and string values.\n- Include exactly these two fields; no additional\
            \ fields are allowed.\n- Ensure valid JSON: properly escaped strings,\
            \ no trailing commas.\n\nExample correct output:\n{\n  \"name\": \"Travel\
            \ Helper Bot\",\n  \"prompt_template\": \"You are a helpful assistant\
            \ that helps users plan trips.\"\n}\n"
        selected: false
        structured_output:
          schema:
            additionalProperties: false
            properties:
              prompt_template:
                description: The system prompt text that will go into prompt_template.text.
                type: string
              title:
                description: A short, clear, and relevant title for the chatbot.
                type: string
            required:
            - title
            - prompt_template
            type: object
        structured_output_enabled: false
        title: Edit DSL
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1757513100087'
      position:
        x: 912.2317222644374
        y: 423.7256240471009
      positionAbsolute:
        x: 912.2317222644374
        y: 423.7256240471009
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ''
            ja_JP: ''
            pt_BR: ''
            zh_Hans: ''
          label:
            en_US: AI_Powered_Apps
            ja_JP: AI_Powered_Apps
            pt_BR: AI_Powered_Apps
            zh_Hans: AI_Powered_Apps
          llm_description: ''
          max: null
          min: null
          name: AI_Powered_Apps
          options:
          - icon: null
            label:
              en_US: ChatBot
              ja_JP: ChatBot
              pt_BR: ChatBot
              zh_Hans: ChatBot
            value: ChatBot
          - icon: null
            label:
              en_US: Image Detector
              ja_JP: Image Detector
              pt_BR: Image Detector
              zh_Hans: Image Detector
            value: Image Detector
          - icon: null
            label:
              en_US: None
              ja_JP: None
              pt_BR: None
              zh_Hans: None
            value: None
          placeholder:
            en_US: ''
            ja_JP: ''
            pt_BR: ''
            zh_Hans: ''
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: ''
            ja_JP: ''
            pt_BR: ''
            zh_Hans: ''
          label:
            en_US: Business_Utility_Apps
            ja_JP: Business_Utility_Apps
            pt_BR: Business_Utility_Apps
            zh_Hans: Business_Utility_Apps
          llm_description: ''
          max: null
          min: null
          name: Business_Utility_Apps
          options:
          - icon: null
            label:
              en_US: Email Generator
              ja_JP: Email Generator
              pt_BR: Email Generator
              zh_Hans: Email Generator
            value: Email Generator
          - icon: null
            label:
              en_US: Calculator
              ja_JP: Calculator
              pt_BR: Calculator
              zh_Hans: Calculator
            value: Calculator
          - icon: null
            label:
              en_US: None
              ja_JP: None
              pt_BR: None
              zh_Hans: None
            value: None
          placeholder:
            en_US: ''
            ja_JP: ''
            pt_BR: ''
            zh_Hans: ''
          precision: null
          required: true
          scope: null
          template: null
          type: select
        params:
          AI_Powered_Apps: ''
          Business_Utility_Apps: ''
        provider_id: cd81fe21-4deb-44f2-9621-417b677372f9
        provider_name: Select App 2
        provider_type: workflow
        selected: false
        title: Select App
        tool_configurations: {}
        tool_description: ''
        tool_label: Select App 2
        tool_name: GetTemplate
        tool_parameters:
          AI_Powered_Apps:
            type: variable
            value:
            - '1756820253386'
            - AI_Powered_Apps
          Business_Utility_Apps:
            type: variable
            value:
            - '1756820253386'
            - Business_Utility_Apps
        type: tool
      height: 54
      id: '1757948993151'
      position:
        x: 603.0339104181248
        y: 294
      positionAbsolute:
        x: 603.0339104181248
        y: 294
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(text: str) -> dict:\n    debug_info = {}\n\
          \    \n    try:\n        # Parse the \"text\" field (it's a JSON string)\n\
          \        parsed = json.loads(text)\n        debug_info[\"parsed\"] = parsed\n\
          \    except Exception as e:\n        return {\"test2_url\": None, \"debug\"\
          : {\"error\": f\"Failed to parse text: {e}\", \"raw_text\": text}}\n\n \
          \   # Extract test2\n    test2_url = parsed.get(\"test2\")\n    if not test2_url:\n\
          \        return {\"test2_url\": None, \"debug\": {\"error\": \"'test2' not\
          \ found\", \"parsed\": parsed}}\n\n    return {\"test2_url\": test2_url}\n"
        code_language: python3
        desc: ''
        outputs:
          test2_url:
            children: null
            type: string
        selected: false
        title: Parsing
        type: code
        variables:
        - value_selector:
          - '1757948993151'
          - text
          value_type: string
          variable: text
      height: 54
      id: '1758028067775'
      position:
        x: 603.0339104181248
        y: 390.3735316276532
      positionAbsolute:
        x: 603.0339104181248
        y: 390.3735316276532
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: 'You are a parameter extraction assistant.


          The input will contain a full DSL specification inside the field "body":

          {{#1756824342559.body#}}


          From this input, extract **only** the `text` field of the first item in
          the `prompt_template` array.


          Rules:

          - Return the result as a **plain string** only.

          - Preserve all line breaks and formatting exactly as in the DSL.

          - Do not change, remove, rename, or relocate any content inside the `text`
          field.

          - If `prompt_template` does not exist or is empty, return an empty string.


          Do not output JSON, arrays, objects, or any extra text.

          '
        model:
          completion_params:
            json_schema: ''
            temperature: 0.7
          mode: chat
          name: gemini-2.5-flash
          provider: langgenius/gemini/google
        parameters:
        - description: This is the prompt template of the dsl file
          name: prompt_template
          required: true
          type: string
        query:
        - '1760264519999'
        - safe_text
        reasoning_mode: prompt
        selected: false
        title: Prompt Template Extract
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1758893789428'
      position:
        x: 912.2317222644374
        y: 301.94696509542206
      positionAbsolute:
        x: 912.2317222644374
        y: 301.94696509542206
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(raw_dsl: str) -> dict:\n    \"\"\"\n    Escapes\
          \ a YAML DSL string for safe inclusion in a JSON body.\n    \"\"\"\n   \
          \ # Strip leading/trailing whitespace\n    dsl_text = raw_dsl.strip()\n\
          \    \n    # Escape backslashes\n    dsl_text = dsl_text.replace(\"\\\\\"\
          , \"\\\\\\\\\")\n    \n    # Escape double quotes\n    dsl_text = dsl_text.replace('\"\
          ', '\\\\\"')\n    \n    # Replace line breaks with \\n\n    dsl_text = dsl_text.replace(\"\
          \\n\", \"\\\\n\")\n    \n    return {\n        \"dsl_text\": dsl_text\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          dsl_text:
            children: null
            type: string
        selected: false
        title: Reformat DSL
        type: code
        variables:
        - value_selector:
          - '1760259516447'
          - text
          value_type: string
          variable: raw_dsl
      height: 54
      id: '1758907407686'
      position:
        x: 912.2317222644374
        y: 676.6933618541038
      positionAbsolute:
        x: 912.2317222644374
        y: 676.6933618541038
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1757513100087'
          - text
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: gemini-2.5-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: 7759c513-2ac9-4962-a588-a04e86f58a8d
          role: system
          text: "You are an assistant that updates a Dify DSL template using the user's\
            \ revised system prompt.\n\nYou will receive:\n- The original DSL template\
            \ text: {{#1756824342559.body#}}\n- The LLM's JSON output from the previous\
            \ node: {{#context#}}\n\nYour task:\n1. Parse the JSON output from the\
            \ previous node. It contains exactly two fields:\n   - \"name\": the new\
            \ app name\n   - \"prompt_template\": the revised system prompt\n2. Update\
            \ the original DSL template accordingly:\n   - Replace the value of `app.name`\
            \ with the value of \"name\".\n   - Replace every occurrence of the LLM\
            \ nodeâ€™s `prompt_template[].text` field with the new \"prompt_template\"\
            .\n   - Preserve all other structure and indentation in the YAML.\n3.\
            \ Output the full, updated DSL as YAML text only.\n\nOutput requirements:\n\
            - Output **only the full updated YAML DSL**.\n- Do not include explanations,\
            \ JSON, or code fences.\n- Keep indentation and structure identical to\
            \ the original wherever possible.\n"
        selected: false
        title: Append DSL
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1760259516447'
      position:
        x: 912.2317222644374
        y: 555.999240362064
      positionAbsolute:
        x: 912.2317222644374
        y: 555.999240362064
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\n\ndef main(dsl_text: str) -> dict:\n    \"\"\"\n    Prepares\
          \ DSL text for the extractor node by escaping all Dify-style placeholders.\n\
          \    \n    Args:\n        dsl_text (str): Full DSL text containing `{{#...#}}`\
          \ placeholders.\n\n    Returns:\n        dict: Contains 'safe_text' that\
          \ can be fed to the extractor node.\n    \"\"\"\n\n    # Regex to match\
          \ all {{#...#}} placeholders\n    pattern = r\"(\\{\\{#.*?#\\}\\})\"\n\n\
          \    # Escape all placeholders by replacing { and } with \\{ and \\}\n \
          \   def escape_placeholder(match):\n        placeholder = match.group(1)\n\
          \        return placeholder.replace(\"{\", \"\\\\{\").replace(\"}\", \"\\\
          \\}\")\n\n    safe_text = re.sub(pattern, escape_placeholder, dsl_text)\n\
          \n    return {\n        \"safe_text\": safe_text\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          safe_text:
            children: null
            type: string
        selected: false
        title: Prevent Escape Text
        type: code
        variables:
        - value_selector:
          - '1756824342559'
          - body
          value_type: string
          variable: dsl_text
      height: 54
      id: '1760264519999'
      position:
        x: 603.0339104181248
        y: 647.9770719279763
      positionAbsolute:
        x: 603.0339104181248
        y: 647.9770719279763
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -160.11929167910307
      y: -61.21478971209331
      zoom: 0.7043968536427575
